{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,WAC1C,IAAM,EAAgB,SAAS,cAAc,CAAC,iBACxC,EAAiB,SAAS,cAAc,CAAC,kBACzC,EAAe,SAAS,cAAc,CAAC,gBAEzC,EAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,eAAiB,EAAE,CAEnE,SAAS,IACL,aAAa,OAAO,CAAC,YAAa,KAAK,SAAS,CAAC,GACrD,CAEA,SAAS,IAGL,GAFA,EAAa,SAAS,CAAG,GAErB,AAAqB,IAArB,EAAU,MAAM,CAAQ,CACxB,EAAa,SAAS,CAAG,gEACzB,MACJ,CAEA,EAAU,OAAO,CAAC,CAAC,EAAU,KACzB,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,GAAI,EAAS,OAAO,CAAE,CAClB,EAAG,SAAS,CAAG;A;AAEoC,mEAAA,EAAE,EAAS,GAAG,CAAC;AAAqB;AAChD;AACe;AACE;AAC7C;AACL,gBACN,CAAC,CAED,IAAM,EAAU,EAAG,aAAa,CAAC,cAC3B,EAAY,EAAG,aAAa,CAAC,gBAC7B,EAAW,EAAG,aAAa,CAAC,aAElC,EAAQ,gBAAgB,CAAC,QAAS,KAC9B,IAAM,EAAS,EAAS,KAAK,CAAC,IAAI,EAC9B,CAAA,GAAU,EAAW,IACrB,CAAS,CAAC,EAAM,CAAC,GAAG,CAAG,EACvB,CAAS,CAAC,EAAM,CAAC,OAAO,CAAG,CAAA,EAC3B,IACA,KAEA,MAAM,qCAEd,GAEA,EAAU,gBAAgB,CAAC,QAAS,KAChC,CAAS,CAAC,EAAM,CAAC,OAAO,CAAG,CAAA,EAC3B,IACA,GACJ,EACJ,KAAO,CACH,EAAG,SAAS,CAAG;A;AAEE,iCAAA,EAAE,EAAS,GAAG,CAAC,kBAAkB,EAAE,EAAS,GAAG,CAAC;AAAK;AAC5D;AACuB;AACa;AACD;AACvC,gBACN,CAAC,CAED,IAAM,EAAY,EAAG,aAAa,CAAC,WAC7B,EAAU,EAAG,aAAa,CAAC,SAEjC,EAAU,gBAAgB,CAAC,QAAS,KAChC,EAAU,MAAM,CAAC,EAAO,GACxB,IACA,GACJ,GAEA,EAAQ,gBAAgB,CAAC,QAAS,KAC9B,CAAS,CAAC,EAAM,CAAC,OAAO,CAAG,CAAA,EAC3B,IACA,GACJ,EACJ,CAEA,EAAa,WAAW,CAAC,EAC7B,EACJ,CAEA,SAAS,EAAW,CAAM,EACtB,GAAI,CAEA,OADA,IAAI,IAAI,GACD,CAAA,CACX,CAAE,MAAO,EAAG,CACR,MAAO,CAAA,CACX,CACJ,CAEA,SAAS,IACL,IAAM,EAAM,EAAc,KAAK,CAAC,IAAI,EAEhC,CAAA,GAAO,EAAW,IAClB,EAAU,IAAI,CAAC,CAAE,IAAK,EAAK,QAAS,CAAA,CAAM,GAC1C,IACA,IACA,EAAc,KAAK,CAAG,IAEtB,MAAM,sEAEd,CAEA,EAAe,gBAAgB,CAAC,QAAS,GAEzC,EAAc,gBAAgB,CAAC,WAAY,SAAS,CAAC,EAC7C,AAAU,UAAV,EAAE,GAAG,EACL,GAER,GAEA,GACJ","sources":["<anon>","src/js/notates.js"],"sourcesContent":["var $60d2dbedea1b1133$exports = {};\ndocument.addEventListener('DOMContentLoaded', function() {\n    const bookmarkInput = document.getElementById('bookmarkInput');\n    const addBookmarkBtn = document.getElementById('addBookmarkBtn');\n    const bookmarkList = document.getElementById('bookmarkList');\n    let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\n    function saveBookmarks() {\n        localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n    }\n    function renderBookmarks() {\n        bookmarkList.innerHTML = '';\n        if (bookmarks.length === 0) {\n            bookmarkList.innerHTML = '<li class=\"empty-message\">\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0437\\u0430\\u043A\\u043B\\u0430\\u0434\\u043E\\u043A. \\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0448\\u0443!</li>';\n            return;\n        }\n        bookmarks.forEach((bookmark, index)=>{\n            const li = document.createElement('li');\n            if (bookmark.editing) {\n                li.innerHTML = `\n                    <div class=\"edit-form\">\n                        <input type=\"text\" class=\"edit-url\" value=\"${bookmark.url}\" placeholder=\"URL\">\n                        <div class=\"edit-form-buttons\">\n                            <button class=\"save-edit\">\\u{417}\\u{431}\\u{435}\\u{440}\\u{435}\\u{433}\\u{442}\\u{438}</button>\n                            <button class=\"cancel-edit\">\\u{421}\\u{43A}\\u{430}\\u{441}\\u{443}\\u{432}\\u{430}\\u{442}\\u{438}</button>\n                        </div>\n                    </div>\n                `;\n                const saveBtn = li.querySelector('.save-edit');\n                const cancelBtn = li.querySelector('.cancel-edit');\n                const urlInput = li.querySelector('.edit-url');\n                saveBtn.addEventListener('click', ()=>{\n                    const newUrl = urlInput.value.trim();\n                    if (newUrl && isValidUrl(newUrl)) {\n                        bookmarks[index].url = newUrl;\n                        bookmarks[index].editing = false;\n                        saveBookmarks();\n                        renderBookmarks();\n                    } else alert(\"\\u0411\\u0443\\u0434\\u044C \\u043B\\u0430\\u0441\\u043A\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u0438\\u0439 URL\");\n                });\n                cancelBtn.addEventListener('click', ()=>{\n                    bookmarks[index].editing = false;\n                    saveBookmarks();\n                    renderBookmarks();\n                });\n            } else {\n                li.innerHTML = `\n                    <div class=\"bookmark-content\">\n                        <a href=\"${bookmark.url}\" target=\"_blank\">${bookmark.url}</a>\n                    </div>\n                    <div class=\"bookmark-actions\">\n                        <button class=\"edit\">\\u{420}\\u{435}\\u{434}\\u{430}\\u{433}\\u{443}\\u{432}\\u{430}\\u{442}\\u{438}</button>\n                        <button class=\"delete\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n                    </div>\n                `;\n                const deleteBtn = li.querySelector('.delete');\n                const editBtn = li.querySelector('.edit');\n                deleteBtn.addEventListener('click', ()=>{\n                    bookmarks.splice(index, 1);\n                    saveBookmarks();\n                    renderBookmarks();\n                });\n                editBtn.addEventListener('click', ()=>{\n                    bookmarks[index].editing = true;\n                    saveBookmarks();\n                    renderBookmarks();\n                });\n            }\n            bookmarkList.appendChild(li);\n        });\n    }\n    function isValidUrl(string) {\n        try {\n            new URL(string);\n            return true;\n        } catch (_) {\n            return false;\n        }\n    }\n    function addBookmark() {\n        const url = bookmarkInput.value.trim();\n        if (url && isValidUrl(url)) {\n            bookmarks.push({\n                url: url,\n                editing: false\n            });\n            saveBookmarks();\n            renderBookmarks();\n            bookmarkInput.value = '';\n        } else alert(\"\\u0411\\u0443\\u0434\\u044C \\u043B\\u0430\\u0441\\u043A\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u0438\\u0439 URL (\\u043D\\u0430\\u043F\\u0440\\u0438\\u043A\\u043B\\u0430\\u0434: https://example.com)\");\n    }\n    addBookmarkBtn.addEventListener('click', addBookmark);\n    bookmarkInput.addEventListener('keypress', function(e) {\n        if (e.key === 'Enter') addBookmark();\n    });\n    renderBookmarks();\n});\n\n\n//# sourceMappingURL=hw8-js4-localstorage.2f68a99c.js.map\n","document.addEventListener('DOMContentLoaded', function() {\r\n    const bookmarkInput = document.getElementById('bookmarkInput');\r\n    const addBookmarkBtn = document.getElementById('addBookmarkBtn');\r\n    const bookmarkList = document.getElementById('bookmarkList');\r\n    \r\n    let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\r\n    \r\n    function saveBookmarks() {\r\n        localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\r\n    }\r\n    \r\n    function renderBookmarks() {\r\n        bookmarkList.innerHTML = '';\r\n        \r\n        if (bookmarks.length === 0) {\r\n            bookmarkList.innerHTML = '<li class=\"empty-message\">Немає закладок. Додайте першу!</li>';\r\n            return;\r\n        }\r\n        \r\n        bookmarks.forEach((bookmark, index) => {\r\n            const li = document.createElement('li');\r\n            \r\n            if (bookmark.editing) {\r\n                li.innerHTML = `\r\n                    <div class=\"edit-form\">\r\n                        <input type=\"text\" class=\"edit-url\" value=\"${bookmark.url}\" placeholder=\"URL\">\r\n                        <div class=\"edit-form-buttons\">\r\n                            <button class=\"save-edit\">Зберегти</button>\r\n                            <button class=\"cancel-edit\">Скасувати</button>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n                \r\n                const saveBtn = li.querySelector('.save-edit');\r\n                const cancelBtn = li.querySelector('.cancel-edit');\r\n                const urlInput = li.querySelector('.edit-url');\r\n                \r\n                saveBtn.addEventListener('click', () => {\r\n                    const newUrl = urlInput.value.trim();\r\n                    if (newUrl && isValidUrl(newUrl)) {\r\n                        bookmarks[index].url = newUrl;\r\n                        bookmarks[index].editing = false;\r\n                        saveBookmarks();\r\n                        renderBookmarks();\r\n                    } else {\r\n                        alert('Будь ласка, введіть правильний URL');\r\n                    }\r\n                });\r\n                \r\n                cancelBtn.addEventListener('click', () => {\r\n                    bookmarks[index].editing = false;\r\n                    saveBookmarks();\r\n                    renderBookmarks();\r\n                });\r\n            } else {\r\n                li.innerHTML = `\r\n                    <div class=\"bookmark-content\">\r\n                        <a href=\"${bookmark.url}\" target=\"_blank\">${bookmark.url}</a>\r\n                    </div>\r\n                    <div class=\"bookmark-actions\">\r\n                        <button class=\"edit\">Редагувати</button>\r\n                        <button class=\"delete\">Видалити</button>\r\n                    </div>\r\n                `;\r\n                \r\n                const deleteBtn = li.querySelector('.delete');\r\n                const editBtn = li.querySelector('.edit');\r\n                \r\n                deleteBtn.addEventListener('click', () => {\r\n                    bookmarks.splice(index, 1);\r\n                    saveBookmarks();\r\n                    renderBookmarks();\r\n                });\r\n                \r\n                editBtn.addEventListener('click', () => {\r\n                    bookmarks[index].editing = true;\r\n                    saveBookmarks();\r\n                    renderBookmarks();\r\n                });\r\n            }\r\n            \r\n            bookmarkList.appendChild(li);\r\n        });\r\n    }\r\n    \r\n    function isValidUrl(string) {\r\n        try {\r\n            new URL(string);\r\n            return true;\r\n        } catch (_) {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    function addBookmark() {\r\n        const url = bookmarkInput.value.trim();\r\n        \r\n        if (url && isValidUrl(url)) {\r\n            bookmarks.push({ url: url, editing: false });\r\n            saveBookmarks();\r\n            renderBookmarks();\r\n            bookmarkInput.value = '';\r\n        } else {\r\n            alert('Будь ласка, введіть правильний URL (наприклад: https://example.com)');\r\n        }\r\n    }\r\n    \r\n    addBookmarkBtn.addEventListener('click', addBookmark);\r\n    \r\n    bookmarkInput.addEventListener('keypress', function(e) {\r\n        if (e.key === 'Enter') {\r\n            addBookmark();\r\n        }\r\n    });\r\n    \r\n    renderBookmarks();\r\n});"],"names":["document","addEventListener","bookmarkInput","getElementById","addBookmarkBtn","bookmarkList","bookmarks","JSON","parse","localStorage","getItem","saveBookmarks","setItem","stringify","renderBookmarks","innerHTML","length","forEach","bookmark","index","li","createElement","editing","url","saveBtn","querySelector","cancelBtn","urlInput","newUrl","value","trim","isValidUrl","alert","deleteBtn","editBtn","splice","appendChild","string","URL","_","addBookmark","push","e","key"],"version":3,"file":"hw8-js4-localstorage.2f68a99c.js.map"}